{
  "openapi": "3.0.3",
  "info": {
    "title": "AssetKeeper",
    "description": "AssetKeeper用API",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "accounts",
      "description": "Operations about accounts"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Get users",
        "description": "",
        "operationId": "getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["users"],
        "summary": "Get users by user id",
        "description": "",
        "operationId": "getUsersById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userid supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": ["users"],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": ["accounts"],
        "summary": "Get accounts",
        "description": "",
        "operationId": "getAccounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                }
              }
            }
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "post": {
        "tags": ["accounts"],
        "summary": "Create account",
        "description": "This can only be done by the logged in user.",
        "operationId": "createAccount",
        "requestBody": {
          "description": "Created account object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": ["accounts"],
        "summary": "Get accounts by account id",
        "description": "",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": ["accounts"],
        "summary": "Update account",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "id that need to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Accounts"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["accounts"],
        "summary": "Delete account",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/accounts-with-balances": {
      "get": {
        "tags": ["accounts"],
        "summary": "Get accounts with balance history",
        "description": "",
        "operationId": "getAccountsWithBalances",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2023-01-01"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2023-12-31"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/balances": {
      "get": {
        "tags": ["balances"],
        "summary": "Get balances",
        "description": "",
        "operationId": "getBalances",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                }
              }
            }
          },
          "404": {
            "description": "Balance not found"
          }
        }
      },
      "post": {
        "tags": ["balances"],
        "summary": "Create balance",
        "description": "",
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Balances"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Balances"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Balances"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                }
              }
            }
          }
        }
      }
    },
    "/balances/{accountId}": {
      "get": {
        "tags": ["balances"],
        "summary": "Get balances by account id",
        "description": "",
        "operationId": "getBalancesByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },

          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Balances"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/balances/{balanceId}": {
      "patch": {
        "tags": ["balances"],
        "summary": "Update balance",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "balanceId",
            "in": "path",
            "description": "id that need to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Balances"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Balances"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Balances"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["balances"],
        "summary": "Delete balance",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "balanceId",
            "in": "path",
            "description": "The id that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "userName": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "role": {
            "type": "string",
            "example": "Admin"
          },
          "color": {
            "type": "string",
            "example": "#19C37D"
          }
        },
        "xml": {
          "name": "users"
        }
      },
      "Accounts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "accountName": {
            "type": "string",
            "example": "Abank"
          },
          "accountType": {
            "type": "string",
            "example": "Bank"
          },
          "ownerId": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "accounts"
        }
      },
      "Balances": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": "xxx"
          },
          "balanceDate": {
            "type": "object",
            "example": "2023-08-01"
          },
          "balanceAmount": {
            "type": "number",
            "example": 9999
          },
          "memo": {
            "type": "string",
            "example": "○○のため"
          }
        },
        "xml": {
          "name": "accounts"
        }
      }
    },
    "requestBodies": {
      "UsersArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Users"
              }
            }
          }
        }
      }
    }
  }
}
